'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('./stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _numberify = require('./numberify');

var _numberify2 = _interopRequireDefault(_numberify);

var _createChunksList = require('./createChunksList');

var _createChunksList2 = _interopRequireDefault(_createChunksList);

var _isFunction = require('./isFunction');

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isNaN = require('./isNaN');

var _isNaN2 = _interopRequireDefault(_isNaN);

var _isNull = require('./isNull');

var _isNull2 = _interopRequireDefault(_isNull);

var _isObject = require('./isObject');

var _isObject2 = _interopRequireDefault(_isObject);

var _isSymbol = require('./isSymbol');

var _isSymbol2 = _interopRequireDefault(_isSymbol);

var _isUndefined = require('./isUndefined');

var _isUndefined2 = _interopRequireDefault(_isUndefined);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getMappedValueRecord = function getMappedValueRecord() {
  var caseSensitive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return function (value) {
    if (typeof value === 'string' || value instanceof String || (typeof value === 'number' || value instanceof Number) && !(0, _isNaN2.default)(value) || typeof value === 'boolean' || value instanceof Boolean || value instanceof Date) {
      var stringValue = (0, _stringify2.default)(value, caseSensitive);
      var parsedNumber = (0, _numberify2.default)(stringValue);
      var chunks = (0, _createChunksList2.default)(parsedNumber ? '' + parsedNumber : stringValue);
      return {
        parsedNumber: parsedNumber,
        chunks: chunks,
        value: value
      };
    }
    return {
      isArray: Array.isArray(value),
      isFunction: (0, _isFunction2.default)(value),
      isNaN: (0, _isNaN2.default)(value),
      isNull: (0, _isNull2.default)(value),
      isObject: (0, _isObject2.default)(value),
      isSymbol: (0, _isSymbol2.default)(value),
      isUndefined: (0, _isUndefined2.default)(value),
      value: value
    };
  };
};

exports.default = getMappedValueRecord;