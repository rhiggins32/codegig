'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _compareMultiple = require('./compareMultiple');

var _compareMultiple2 = _interopRequireDefault(_compareMultiple);

var _createIdentifierFn = require('./createIdentifierFn');

var _createIdentifierFn2 = _interopRequireDefault(_createIdentifierFn);

var _getMappedValueRecord = require('./getMappedValueRecord');

var _getMappedValueRecord2 = _interopRequireDefault(_getMappedValueRecord);

var _getValueByIdentifier = require('./getValueByIdentifier');

var _getValueByIdentifier2 = _interopRequireDefault(_getValueByIdentifier);

var _getElementByIndex = require('./getElementByIndex');

var _getElementByIndex2 = _interopRequireDefault(_getElementByIndex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var baseOrderBy = function baseOrderBy(collection, identifiers, orders) {
  var identifierFns = identifiers.length ? identifiers.map(_createIdentifierFn2.default) : [function (value) {
    return value;
  }];

  // temporary array holds elements with position and sort-values
  var mappedCollection = collection.map(function (element, index) {
    var values = identifierFns.map(function (identifier) {
      return (0, _getValueByIdentifier2.default)(element, identifier);
    }).map((0, _getMappedValueRecord2.default)());
    return {
      index: index,
      values: values
    };
  });

  // iterate over values and compare values until a != b or last value reached
  mappedCollection.sort(function (recordA, recordB) {
    return (0, _compareMultiple2.default)(recordA, recordB, orders);
  });

  return mappedCollection.map(function (element) {
    return (0, _getElementByIndex2.default)(collection, element.index);
  });
};
exports.default = baseOrderBy;